version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sales_calls_db
    environment:
      POSTGRES_DB: sales_calls_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - sales_analysis_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d sales_calls_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: sales_calls_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sales_analysis_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main FastAPI Application
  app:
    build: .
    container_name: sales_calls_app
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_calls_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./tts_output:/app/tts_output
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sales_analysis_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for Transcription
  celery_worker:
    build: .
    container_name: sales_calls_worker
    command: celery -A workers.celery_app worker --loglevel=info --queues=transcription,analysis
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_calls_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
      - ./tts_output:/app/tts_output
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sales_analysis_network
    restart: unless-stopped

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build: .
    container_name: sales_calls_beat
    command: celery -A workers.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/sales_calls_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sales_analysis_network
    restart: unless-stopped

  # Flower for Celery Monitoring (Optional)
  flower:
    build: .
    container_name: sales_calls_flower
    command: celery -A workers.celery_app flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - sales_analysis_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  sales_analysis_network:
    driver: bridge
